[
  {
    "timestamp": "2025-07-12 11:57:02",
    "message": "\ud83d\udd0d After bracket processing: 'get_nested_value(data, 'result.downloaded_issues') > 1'"
  },
  {
    "timestamp": "2025-07-12 11:57:02",
    "message": "\ud83d\udd0d Condition data structure: {\n  \"value\": null,\n  \"old_value\": null,\n  \"data\": {\n    \"error\": null,\n    \"result\": {\n      \"downloaded_issues\": 302,\n      \"files\": 302,\n      \"issues\": 469,\n      \"monitored\": 29,\n      \"total_file_size\": 45409936558,\n      \"unmonitored\": 44,\n      \"volumes\": 73\n    }\n  },\n  \"time\": \"2025-07-12 11:57:02\",\n  \"True\": true,\n  \"False\": false,\n  \"None\": null,\n  \"int\": \"<type>\",\n  \"float\": \"<type>\",\n  \"str\": \"<type>\",\n  \"len\": \"<builtin_function_or_method>\",\n  \"error\": null,\n  \"result\": {\n    \"downloaded_issues\": 302,\n    \"files\": 302,\n    \"issues\": 469,\n    \"monitored\": 29,\n    \"total_file_size\": 45409936558,\n    \"unmonitored\": 44,\n    \"volumes\": 73\n  },\n  \"get_nested_value\": \"<function>\"\n}"
  },
  {
    "timestamp": "2025-07-12 11:57:02",
    "message": "\ud83d\udd0d Processed condition: 'get_nested_value(data, 'result.downloaded_issues') > 1'"
  },
  {
    "timestamp": "2025-07-12 11:57:02",
    "message": "\ud83d\udd0d Safe dict keys: ['value', 'old_value', 'data', 'time', 'True', 'False', 'None', 'int', 'float', 'str', 'len', 'error', 'result', 'get_nested_value']"
  },
  {
    "timestamp": "2025-07-12 11:57:02",
    "message": "Condition evaluation error: 'result['downloaded_issues'] > 1' - evaluate_condition.<locals>.<lambda>() takes 1 positional argument but 2 were given"
  },
  {
    "timestamp": "2025-07-12 11:57:02",
    "message": "\u23ed\ufe0f Condition not met for flow 'kapowarr': result['downloaded_issues'] > 1"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "Test: Successfully fetched data from http://192.168.1.205:5656/api/volumes/stats?api_key=ebc7ae18fc51185122967f05727bf003"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'kapowarr'"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "\ud83d\udd0d Debug: Test flow webhook_name key exists: True"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "\ud83d\udd0d Debug: Test flow webhook_name value: 'kapooparr'"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "\ud83d\udd0d Found bracket notation in condition: 'result['downloaded_issues'] > 1'"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "\ud83d\udd0d Replacing 'result['downloaded_issues']' with 'get_nested_value(data, 'result.downloaded_issues')'"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "\ud83d\udd0d After bracket processing: 'get_nested_value(data, 'result.downloaded_issues') > 1'"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "\ud83d\udd0d Condition data structure: {\n  \"value\": null,\n  \"old_value\": null,\n  \"data\": {\n    \"error\": null,\n    \"result\": {\n      \"downloaded_issues\": 302,\n      \"files\": 302,\n      \"issues\": 469,\n      \"monitored\": 29,\n      \"total_file_size\": 45409936558,\n      \"unmonitored\": 44,\n      \"volumes\": 73\n    }\n  },\n  \"time\": \"2025-07-12 11:57:29\",\n  \"True\": true,\n  \"False\": false,\n  \"None\": null,\n  \"int\": \"<type>\",\n  \"float\": \"<type>\",\n  \"str\": \"<type>\",\n  \"len\": \"<builtin_function_or_method>\",\n  \"error\": null,\n  \"result\": {\n    \"downloaded_issues\": 302,\n    \"files\": 302,\n    \"issues\": 469,\n    \"monitored\": 29,\n    \"total_file_size\": 45409936558,\n    \"unmonitored\": 44,\n    \"volumes\": 73\n  },\n  \"get_nested_value\": \"<function>\"\n}"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "\ud83d\udd0d Processed condition: 'get_nested_value(data, 'result.downloaded_issues') > 1'"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "\ud83d\udd0d Safe dict keys: ['value', 'old_value', 'data', 'time', 'True', 'False', 'None', 'int', 'float', 'str', 'len', 'error', 'result', 'get_nested_value']"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "Condition evaluation error: 'result['downloaded_issues'] > 1' - evaluate_condition.<locals>.<lambda>() takes 1 positional argument but 2 were given"
  },
  {
    "timestamp": "2025-07-12 11:57:29",
    "message": "\u23ed\ufe0f Condition not met for flow 'kapowarr': result['downloaded_issues'] > 1"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "Test: Successfully fetched data from http://192.168.1.205:5656/api/volumes/stats?api_key=ebc7ae18fc51185122967f05727bf003"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'kapowarr'"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "\ud83d\udd0d Debug: Test flow webhook_name key exists: True"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "\ud83d\udd0d Debug: Test flow webhook_name value: 'kapooparr'"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "\ud83d\udd0d Found bracket notation in condition: 'result['downloaded_issues'] > 1'"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "\ud83d\udd0d Replacing 'result['downloaded_issues']' with 'result['downloaded_issues']'"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "\ud83d\udd0d After bracket processing: 'result['downloaded_issues'] > 1'"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "\ud83d\udd0d Condition data structure: {\n  \"value\": null,\n  \"old_value\": null,\n  \"data\": {\n    \"error\": null,\n    \"result\": {\n      \"downloaded_issues\": 302,\n      \"files\": 302,\n      \"issues\": 469,\n      \"monitored\": 29,\n      \"total_file_size\": 45409936558,\n      \"unmonitored\": 44,\n      \"volumes\": 73\n    }\n  },\n  \"time\": \"2025-07-12 11:58:57\",\n  \"True\": true,\n  \"False\": false,\n  \"None\": null,\n  \"int\": \"<type>\",\n  \"float\": \"<type>\",\n  \"str\": \"<type>\",\n  \"len\": \"<builtin_function_or_method>\",\n  \"error\": null,\n  \"result\": {\n    \"downloaded_issues\": 302,\n    \"files\": 302,\n    \"issues\": 469,\n    \"monitored\": 29,\n    \"total_file_size\": 45409936558,\n    \"unmonitored\": 44,\n    \"volumes\": 73\n  },\n  \"get_nested_value\": \"<function>\"\n}"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "\ud83d\udd0d Processed condition: 'result['downloaded_issues'] > 1'"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "\ud83d\udd0d Safe dict keys: ['value', 'old_value', 'data', 'time', 'True', 'False', 'None', 'int', 'float', 'str', 'len', 'error', 'result', 'get_nested_value']"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "Condition evaluation: 'result['downloaded_issues'] > 1' -> True (type: <class 'bool'>)"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "Condition boolean result: True"
  },
  {
    "timestamp": "2025-07-12 11:58:57",
    "message": "\ud83d\udd0d Debug: Flow webhook_name='kapooparr', config default='turtifications'"
  },
  {
    "timestamp": "2025-07-12 11:58:58",
    "message": "\u2705 Notification sent successfully to Discord webhook"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "Test: Successfully fetched data from http://192.168.1.205:5656/api/volumes/stats?api_key=ebc7ae18fc51185122967f05727bf003"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'kapowarr'"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "\ud83d\udd0d Debug: Test flow webhook_name key exists: True"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "\ud83d\udd0d Debug: Test flow webhook_name value: 'kapooparr'"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "\ud83d\udd0d Found bracket notation in condition: 'result['downloaded_issues'] < 1'"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "\ud83d\udd0d Replacing 'result['downloaded_issues']' with 'result['downloaded_issues']'"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "\ud83d\udd0d After bracket processing: 'result['downloaded_issues'] < 1'"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "\ud83d\udd0d Condition data structure: {\n  \"value\": null,\n  \"old_value\": null,\n  \"data\": {\n    \"error\": null,\n    \"result\": {\n      \"downloaded_issues\": 302,\n      \"files\": 302,\n      \"issues\": 469,\n      \"monitored\": 29,\n      \"total_file_size\": 45409936558,\n      \"unmonitored\": 44,\n      \"volumes\": 73\n    }\n  },\n  \"time\": \"2025-07-12 11:59:08\",\n  \"True\": true,\n  \"False\": false,\n  \"None\": null,\n  \"int\": \"<type>\",\n  \"float\": \"<type>\",\n  \"str\": \"<type>\",\n  \"len\": \"<builtin_function_or_method>\",\n  \"error\": null,\n  \"result\": {\n    \"downloaded_issues\": 302,\n    \"files\": 302,\n    \"issues\": 469,\n    \"monitored\": 29,\n    \"total_file_size\": 45409936558,\n    \"unmonitored\": 44,\n    \"volumes\": 73\n  },\n  \"get_nested_value\": \"<function>\"\n}"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "\ud83d\udd0d Processed condition: 'result['downloaded_issues'] < 1'"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "\ud83d\udd0d Safe dict keys: ['value', 'old_value', 'data', 'time', 'True', 'False', 'None', 'int', 'float', 'str', 'len', 'error', 'result', 'get_nested_value']"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "Condition evaluation: 'result['downloaded_issues'] < 1' -> False (type: <class 'bool'>)"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "Condition boolean result: False"
  },
  {
    "timestamp": "2025-07-12 11:59:08",
    "message": "\u23ed\ufe0f Condition not met for flow 'kapowarr': result['downloaded_issues'] < 1"
  },
  {
    "timestamp": "2025-07-12 11:59:15",
    "message": "Test: Successfully fetched data from http://192.168.1.205:5656/api/volumes/stats?api_key=ebc7ae18fc51185122967f05727bf003"
  },
  {
    "timestamp": "2025-07-12 11:59:15",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'kapowarr'"
  },
  {
    "timestamp": "2025-07-12 11:59:15",
    "message": "\ud83d\udd0d Debug: Test flow webhook_name key exists: True"
  },
  {
    "timestamp": "2025-07-12 11:59:15",
    "message": "\ud83d\udd0d Debug: Test flow webhook_name value: 'kapooparr'"
  },
  {
    "timestamp": "2025-07-12 11:59:15",
    "message": "\ud83d\udd0d Found bracket notation in condition: 'result['downloaded_issues'] > 1'"
  },
  {
    "timestamp": "2025-07-12 11:59:15",
    "message": "\ud83d\udd0d Replacing 'result['downloaded_issues']' with 'result['downloaded_issues']'"
  },
  {
    "timestamp": "2025-07-12 11:59:15",
    "message": "\ud83d\udd0d After bracket processing: 'result['downloaded_issues'] > 1'"
  },
  {
    "timestamp": "2025-07-12 11:59:15",
    "message": "\ud83d\udd0d Condition data structure: {\n  \"value\": null,\n  \"old_value\": null,\n  \"data\": {\n    \"error\": null,\n    \"result\": {\n      \"downloaded_issues\": 302,\n      \"files\": 302,\n      \"issues\": 469,\n      \"monitored\": 29,\n      \"total_file_size\": 45409936558,\n      \"unmonitored\": 44,\n      \"volumes\": 73\n    }\n  },\n  \"time\": \"2025-07-12 11:59:15\",\n  \"True\": true,\n  \"False\": false,\n  \"None\": null,\n  \"int\": \"<type>\",\n  \"float\": \"<type>\",\n  \"str\": \"<type>\",\n  \"len\": \"<builtin_function_or_method>\",\n  \"error\": null,\n  \"result\": {\n    \"downloaded_issues\": 302,\n    \"files\": 302,\n    \"issues\": 469,\n    \"monitored\": 29,\n    \"total_file_size\": 45409936558,\n    \"unmonitored\": 44,\n    \"volumes\": 73\n  },\n  \"get_nested_value\": \"<function>\"\n}"
  },
  {
    "timestamp": "2025-07-12 11:59:15",
    "message": "\ud83d\udd0d Processed condition: 'result['downloaded_issues'] > 1'"
  },
  {
    "timestamp": "2025-07-12 11:59:16",
    "message": "\ud83d\udd0d Safe dict keys: ['value', 'old_value', 'data', 'time', 'True', 'False', 'None', 'int', 'float', 'str', 'len', 'error', 'result', 'get_nested_value']"
  },
  {
    "timestamp": "2025-07-12 11:59:16",
    "message": "Condition evaluation: 'result['downloaded_issues'] > 1' -> True (type: <class 'bool'>)"
  },
  {
    "timestamp": "2025-07-12 11:59:16",
    "message": "Condition boolean result: True"
  },
  {
    "timestamp": "2025-07-12 11:59:16",
    "message": "\ud83d\udd0d Debug: Flow webhook_name='kapooparr', config default='turtifications'"
  },
  {
    "timestamp": "2025-07-12 11:59:16",
    "message": "\u2705 Notification sent successfully to Discord webhook"
  },
  {
    "timestamp": "2025-07-12 12:09:14",
    "message": "Test: Successfully fetched data from http://192.168.1.205:5656/api/volumes/stats?api_key=ebc7ae18fc51185122967f05727bf003"
  },
  {
    "timestamp": "2025-07-12 12:09:14",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'kapowarr'"
  },
  {
    "timestamp": "2025-07-12 12:09:14",
    "message": "Condition evaluation: 'result['downloaded_issues'] > 1' -> True"
  },
  {
    "timestamp": "2025-07-12 12:09:15",
    "message": "\u2705 Notification sent successfully to Discord webhook"
  },
  {
    "timestamp": "2025-07-12 22:42:51",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=5656): Max retries exceeded with url: /api/activity/history?api_key=ebc7ae18fc51185122967f05727bf003 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x000001ED776ED370>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))"
  },
  {
    "timestamp": "2025-07-12 22:42:51",
    "message": "\ud83d\udd04 Change detected: Field 'result['0']' changed from '{'downloaded_at': 1752309472, 'file_title': 'Birds of Prey (2023) Issue 012', 'issue_id': 13, 'source': 'GetComics', 'volume_id': 2, 'web_link': 'https://getcomics.org/dc/birds-of-prey-12-2024/', 'web_sub_title': 'Birds of Prey #12', 'web_title': 'Birds of Prey #12 (2024)'}' to 'None' in flow 'fart2'"
  },
  {
    "timestamp": "2025-07-12 22:42:51",
    "message": "\u2705 Notification sent successfully to Discord webhook"
  },
  {
    "timestamp": "2025-07-12 22:43:01",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=5656): Max retries exceeded with url: /api/activity/history?api_key=ebc7ae18fc51185122967f05727bf003 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x000001ED777DA330>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))"
  },
  {
    "timestamp": "2025-07-12 22:43:11",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=5656): Max retries exceeded with url: /api/activity/history?api_key=ebc7ae18fc51185122967f05727bf003 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x000001ED777D9460>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))"
  },
  {
    "timestamp": "2025-07-12 22:46:02",
    "message": "\u23f0 Timer trigger: Sending notification for flow 'test'"
  },
  {
    "timestamp": "2025-07-12 22:46:02",
    "message": "\u2705 Notification sent successfully to Discord webhook"
  },
  {
    "timestamp": "2025-07-12 22:47:04",
    "message": "\u23f0 Timer trigger: Sending notification for flow 'test'"
  },
  {
    "timestamp": "2025-07-12 22:47:04",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872d7d8-4f4f80795b3aec6f798ac1d7\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\",\n  \"value\": null,\n  \"api_data\": {\n    \"args\": {},\n    \"headers\": {\n      \"Accept\": \"*/*\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n      \"Host\": \"httpbin.org\",\n      \"User-Agent\": \"python-requests/2.31.0\",\n      \"X-Amzn-Trace-Id\": \"Root=1-6872d7d8-4f4f80795b3aec6f798ac1d7\"\n    },\n    \"origin\": \"146.90.27.59\",\n    \"url\": \"https://httpbin.org/get\"\n  }\n}\r\nfart"
  },
  {
    "timestamp": "2025-07-12 22:47:05",
    "message": "Test: Successfully fetched data from https://httpbin.org/get"
  },
  {
    "timestamp": "2025-07-12 22:47:05",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'test'"
  },
  {
    "timestamp": "2025-07-12 22:47:06",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872d7d9-785bb433698c6728252dfed3\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\"\n}\r\nfart"
  },
  {
    "timestamp": "2025-07-12 22:47:12",
    "message": "Test: Successfully fetched data from https://httpbin.org/get"
  },
  {
    "timestamp": "2025-07-12 22:47:12",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'test'"
  },
  {
    "timestamp": "2025-07-12 22:47:13",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872d7e0-7ffc3bc07a051a023c858ee8\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\"\n}\r\nfart"
  },
  {
    "timestamp": "2025-07-12 22:51:10",
    "message": "Test: Successfully fetched data from https://httpbin.org/get"
  },
  {
    "timestamp": "2025-07-12 22:51:10",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'test'"
  },
  {
    "timestamp": "2025-07-12 22:51:11",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872d8ce-63b00d870db8c0af11789f38\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\"\n}\r\nfart"
  },
  {
    "timestamp": "2025-07-12 22:51:11",
    "flow_name": "test",
    "message_content": "fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872d8ce-63b00d870db8c0af11789f38\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\"\n}\r\nfart",
    "embed_info": null,
    "webhook_name": "turtifications",
    "type": "sent"
  },
  {
    "timestamp": "2025-07-12 22:56:07",
    "message": "\u23f0 Timer trigger: Sending notification for flow 'test'",
    "category": "Testing"
  },
  {
    "timestamp": "2025-07-12 22:56:08",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872d9f7-2ef4072d697957a934f0e829\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\",\n  \"value\": null,\n  \"api_data\": {\n    \"args\": {},\n    \"headers\": {\n      \"Accept\": \"*/*\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n      \"Host\": \"httpbin.org\",\n      \"User-Agent\": \"python-requests/2.31.0\",\n      \"X-Amzn-Trace-Id\": \"Root=1-6872d9f7-2ef4072d697957a934f0e829\"\n    },\n    \"origin\": \"146.90.27.59\",\n    \"url\": \"https://httpbin.org/get\"\n  }\n}\r\nfart",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 22:56:08",
    "flow_name": "test",
    "message_content": "fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872d9f7-2ef4072d697957a934f0e829\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\",\n  \"value\": null,\n  \"api_data\": {\n    \"args\": {},\n    \"headers\": {\n      \"Accept\": \"*/*\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n      \"Host\": \"httpbin.org\",\n      \"User-Agent\": \"python-requests/2.31.0\",\n      \"X-Amzn-Trace-Id\": \"Root=1-6872d9f7-2ef4072d697957a934f0e829\"\n    },\n    \"origin\": \"146.90.27.59\",\n    \"url\": \"https://httpbin.org/get\"\n  }\n}\r\nfart",
    "embed_info": null,
    "webhook_name": "turtifications",
    "type": "sent",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 22:56:12",
    "message": "Test: Successfully fetched data from https://httpbin.org/get",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 22:56:12",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'test'",
    "category": "Testing"
  },
  {
    "timestamp": "2025-07-12 22:56:12",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872d9fc-04ea4dbe06e628cf3cb16448\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\"\n}\r\nfart",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 22:56:12",
    "flow_name": "test",
    "message_content": "fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872d9fc-04ea4dbe06e628cf3cb16448\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\"\n}\r\nfart",
    "embed_info": null,
    "webhook_name": "turtifications",
    "type": "sent",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 22:57:11",
    "message": "\u23f0 Timer trigger: Sending notification for flow 'test'",
    "category": "Testing"
  },
  {
    "timestamp": "2025-07-12 22:57:11",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872da37-6c3a39ef07ce26a356bb68f3\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\",\n  \"value\": null,\n  \"api_data\": {\n    \"args\": {},\n    \"headers\": {\n      \"Accept\": \"*/*\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n      \"Host\": \"httpbin.org\",\n      \"User-Agent\": \"python-requests/2.31.0\",\n      \"X-Amzn-Trace-Id\": \"Root=1-6872da37-6c3a39ef07ce26a356bb68f3\"\n    },\n    \"origin\": \"146.90.27.59\",\n    \"url\": \"https://httpbin.org/get\"\n  }\n}\r\nfart",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 22:57:11",
    "flow_name": "test",
    "message_content": "fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872da37-6c3a39ef07ce26a356bb68f3\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\",\n  \"value\": null,\n  \"api_data\": {\n    \"args\": {},\n    \"headers\": {\n      \"Accept\": \"*/*\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n      \"Host\": \"httpbin.org\",\n      \"User-Agent\": \"python-requests/2.31.0\",\n      \"X-Amzn-Trace-Id\": \"Root=1-6872da37-6c3a39ef07ce26a356bb68f3\"\n    },\n    \"origin\": \"146.90.27.59\",\n    \"url\": \"https://httpbin.org/get\"\n  }\n}\r\nfart",
    "embed_info": null,
    "webhook_name": "turtifications",
    "type": "sent",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 22:58:11",
    "message": "Test: Successfully fetched data from https://httpbin.org/get",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 22:58:11",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'test'",
    "category": "Testing"
  },
  {
    "timestamp": "2025-07-12 22:58:11",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872da73-0cb3e4602050c84d5c10cd74\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\"\n}\r\nfart",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 22:58:11",
    "flow_name": "test",
    "message_content": "fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872da73-0cb3e4602050c84d5c10cd74\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\"\n}\r\nfart",
    "embed_info": null,
    "webhook_name": "turtifications",
    "type": "sent",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 22:58:13",
    "message": "Test: Successfully fetched data from https://httpbin.org/get",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 22:58:13",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'test'",
    "category": "Testing"
  },
  {
    "timestamp": "2025-07-12 22:58:14",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872da75-09a7ecd325f26e993076639e\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\"\n}\r\nfart",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 22:58:14",
    "flow_name": "test",
    "message_content": "fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872da75-09a7ecd325f26e993076639e\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\"\n}\r\nfart",
    "embed_info": null,
    "webhook_name": "turtifications",
    "type": "sent",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 23:02:33",
    "message": "Test: Successfully fetched data from https://httpbin.org/get",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 23:02:33",
    "message": "\ud83e\uddea Test notification: Sending test for flow 'test'",
    "category": "Testing"
  },
  {
    "timestamp": "2025-07-12 23:02:33",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872db79-0a8319ce492d6407287ae4a4\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\"\n}\r\nfart",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 23:04:40",
    "message": "\u23f0 Timer trigger: Sending notification for flow 'test'",
    "category": "Testing"
  },
  {
    "timestamp": "2025-07-12 23:04:41",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872dbf8-697578aa30f213d934b1800b\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\",\n  \"value\": null,\n  \"api_data\": {\n    \"args\": {},\n    \"headers\": {\n      \"Accept\": \"*/*\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n      \"Host\": \"httpbin.org\",\n      \"User-Agent\": \"python-requests/2.31.0\",\n      \"X-Amzn-Trace-Id\": \"Root=1-6872dbf8-697578aa30f213d934b1800b\"\n    },\n    \"origin\": \"146.90.27.59\",\n    \"url\": \"https://httpbin.org/get\"\n  }\n}\r\nfart",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 23:05:26",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=5656): Max retries exceeded with url: /api/volumes/stats?api_key=ebc7ae18fc51185122967f05727bf003 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x0000017AD6394D70>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 23:05:26",
    "message": "\u23f0 Timer trigger: Sending notification for flow 'kapowarr'",
    "category": "Timers"
  },
  {
    "timestamp": "2025-07-12 23:05:26",
    "message": "Condition evaluation error: 'result['downloaded_issues'] > 1' - name 'result' is not defined",
    "category": "Errors"
  },
  {
    "timestamp": "2025-07-12 23:05:26",
    "message": "\u23ed\ufe0f Condition not met for flow 'kapowarr': result['downloaded_issues'] > 1",
    "category": "Conditions"
  },
  {
    "timestamp": "2025-07-12 23:05:31",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=5656): Max retries exceeded with url: /api/activity/history?api_key=ebc7ae18fc51185122967f05727bf003 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x0000017AD6395CA0>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 23:05:36",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=4568): Max retries exceeded with url: /api/graphql (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x0000017AD63952B0>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 23:05:36",
    "message": "\u23f0 Timer trigger: Sending notification for flow 'Suwayomi'",
    "category": "Timers"
  },
  {
    "timestamp": "2025-07-12 23:05:36",
    "message": "Condition evaluation error: 'data['categories']['nodes']['mangas']['totalCount'] == 3' - 'categories'",
    "category": "Errors"
  },
  {
    "timestamp": "2025-07-12 23:05:36",
    "message": "\u23ed\ufe0f Condition not met for flow 'Suwayomi': data['categories']['nodes']['mangas']['totalCount'] == 3",
    "category": "Conditions"
  },
  {
    "timestamp": "2025-07-12 23:05:42",
    "message": "\u23f0 Timer trigger: Sending notification for flow 'test'",
    "category": "Testing"
  },
  {
    "timestamp": "2025-07-12 23:05:43",
    "message": "\u2705 Notification sent successfully to Discord webhook: Message: fart\r\n{\n  \"args\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Accept-Encoding\": \"gzip, deflate\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"python-requests/2.31.0\",\n    \"X-Amzn-Trace-Id\": \"Root=1-6872dc36-6bccdbd12aca5375733b151f\"\n  },\n  \"origin\": \"146.90.27.59\",\n  \"url\": \"https://httpbin.org/get\",\n  \"value\": null,\n  \"api_data\": {\n    \"args\": {},\n    \"headers\": {\n      \"Accept\": \"*/*\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n      \"Host\": \"httpbin.org\",\n      \"User-Agent\": \"python-requests/2.31.0\",\n      \"X-Amzn-Trace-Id\": \"Root=1-6872dc36-6bccdbd12aca5375733b151f\"\n    },\n    \"origin\": \"146.90.27.59\",\n    \"url\": \"https://httpbin.org/get\"\n  }\n}\r\nfart",
    "category": "Notifications"
  },
  {
    "timestamp": "2025-07-12 23:05:48",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=5656): Max retries exceeded with url: /api/volumes/stats?api_key=ebc7ae18fc51185122967f05727bf003 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x0000017AD6395880>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 23:05:53",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=5656): Max retries exceeded with url: /api/activity/history?api_key=ebc7ae18fc51185122967f05727bf003 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x0000017AD6395370>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 23:05:58",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=4568): Max retries exceeded with url: /api/graphql (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x0000017AD63C0830>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 23:06:08",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=5656): Max retries exceeded with url: /api/volumes/stats?api_key=ebc7ae18fc51185122967f05727bf003 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x0000017AD6394680>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 23:06:13",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=5656): Max retries exceeded with url: /api/activity/history?api_key=ebc7ae18fc51185122967f05727bf003 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x0000017AD6395040>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))",
    "category": "API"
  },
  {
    "timestamp": "2025-07-12 23:06:18",
    "message": "API request error: HTTPConnectionPool(host='192.168.1.205', port=4568): Max retries exceeded with url: /api/graphql (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x0000017AD6396000>, 'Connection to 192.168.1.205 timed out. (connect timeout=5)'))",
    "category": "API"
  }
]